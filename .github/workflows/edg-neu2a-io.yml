name: neu2a yocto Build

on:
  push:
    branches:
      - main


jobs:
  build:
    name: neu2a yocto Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          ls
          mkdir neu2aYctBuild
          cd neu2aYctBuild
          sudo apt-get update
          sudo apt install gawk wget git diffstat unzip texinfo gcc-9 build-essential chrpath socat cpio python3 python3-pip python3-pexpect xz-utils debianutils iputils-ping python3-git python3-jinja2 libegl1-mesa libsdl1.2-dev python3-subunit mesa-common-dev zstd liblz4-tool file
           sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 9
          sudo locale-gen en_US.UTF-8

      - name: Clone Yocto Poky repository
        run: |
          cd neu2aYctBuild
          git clone git://git.yoctoproject.org/poky.git  
      
      - name: Clone bitbake repository
        run: |
          cd neu2aYctBuild  
          pwd
          ls
          git clone git://git.openembedded.org/bitbake -b master 
          ls
          
      - name: Clone openembedded-core repository
        run: |
          cd neu2aYctBuild
          git clone git://git.openembedded.org/openembedded-core -b kirkstone  

      - name: Clone meta-arm repository
        run: |
         cd neu2aYctBuild
         git clone git://git.yoctoproject.org/meta-arm -b kirkstone  

      - name: Clone meta-openembedded repository
        run: |
         cd neu2aYctBuild
         git clone git://git.openembedded.org/meta-openembedded -b kirkstone  

      - name: Clone meta-neu6b repo
        run: | 
          cd neu2aYctBuild
          git clone https://github.com/manojams/meta-neu6b.git -b kirkstone 
      
      - name: Print current directory
        run: |
          cd neu2aYctBuild
          pwd

      - name: Check directory contents
        run: |
          cd neu2aYctBuild
          ls
          
      - name: Build neu2a-io yocto build
        run: |
          cd neu2aYctBuild
          ls
          source openembedded-core/oe-init-build-env
          
      - name: Check directory contents
        run: |
           cd neu2aYctBuild
           ls
          
      - name: setup the local.conf
        run: |
          cd neu2aYctBuild
          ls
          source openembedded-core/oe-init-build-env build
          ls
          echo 'MACHINE ??= "neu2a-io"' >> conf/local.conf
          cat conf/local.conf
          
      - name: Update bblayers.conf
        run: |
          cd neu2aYctBuild
          source openembedded-core/oe-init-build-env build
          cat conf/bblayers.conf
          bitbake-layers add-layer ../openembedded-core/meta
          bitbake-layers add-layer ../meta-arm/meta-arm-toolchain
          bitbake-layers add-layer ../meta-arm/meta-arm
          bitbake-layers add-layer ../meta-neu6b
          bitbake-layers add-layer ../meta-openembedded/meta-oe
          bitbake-layers add-layer ../meta-openembedded/meta-python
          bitbake-layers add-layer ../meta-openembedded/meta-networking
        
      - name: bitbake linux-kernel 
        run: |
          cd neu2aYctBuild
          source openembedded-core/oe-init-build-env build
          bitbake linux-kernel
          
      - name: bitbake core-image-minimal
        run: |
          cd neu2aYctBuild
          source openembedded-core/oe-init-build-env build
          bitbake core-image-minimal

      - name: Upload output artifacts
        uses: actions/upload-artifact@v2
        with:
          name: Yocto Output
          path: neu2aYctBuild/build/tmp/deploy/images/neu2a-io/
          

      # Add additional steps if needed, such as deploying the build artifacts
